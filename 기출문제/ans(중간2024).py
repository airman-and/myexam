# 학번:              이름:

print("--- 1 ----")
# 함수 sum(a, b)는 a와 b사이에 있는 모든 5의 배수 합을 반환한다.
# '''''' 위치에 이 함수를 반복문을 사용하지 않고 재귀적으로 작성하시오.
# 단, sum은 대략 (b-a)/5 번 호출되어야한다.

def sum(a, b):
    ''''''

print(sum(0, 15))           # 30
print(sum(11, 21))          # 35
print(sum(12, 16))          # 15
print(sum(23, 24))          # 0
print(sum(24, 33))          # 55


print("--- 2 ----")
# 랜덤하게 생성한 수가 -1이면 A가 이기고, 1이면 B가 이긴다. 0 이면 비긴다.
# 2번을 먼저 이긴 쪽이 승리한다.
# 함수 game은 승부가 날 때까지 생성된 수의 리스트와 이긴 쪽를 문자열로 반환한다.
# 주석처럼 결과가 나오도록 '''''' 위치에 함수를 작성하시오.

import random
random.seed(43)

def game():
    ''''''
            
print(game())       # ([-1, 0, 1, -1], 'A')
print(game())       # ([0, 0, 1, 1], 'B')
print(game())       # ([-1, 0, 1, 0, 1], 'B')


print("--- 3 ----")
# 함수 change(m, n500, n100, n10)는 거스름 돈을 동전으로 계산 한다.
# 동전으로는 500원, 100원, 10원이 있다.
# n500, n100, n10은 각 동전이 있는 갯수이다.
# 500원 동전이 부족하면 100원 동전 등으로 계산해야 하고,
# 100원 동전이 부족하면 10원 동전으로 계산해야한다.
# 동전이 부족하면 "불가"를 출력해야합니다.
# 주석처럼 결과가 나오도록 '''''' 위치에 함수를 작성하시오.
# 단, 동전 수가 최소이어야 하며, 반복문을 사용해야 하며
# 곱셈이나 나눗셈은 사용할 수 없다.

def change(m, n500, n100, n10):
    ''''''

change(500, 0, 0, 100)      # 0 0 50
change(660, 0, 100, 100)    # 0 6 6
change(1230, 10, 10, 10)    # 2 2 3
change(1230, 10, 0, 100)    # 2 0 23
change(1230, 10, 0, 10)     # 불가

print("--- 4 ----")
# 함수 exp(s)은 값이 10 이상인 실수 형태인  문자열을 매개변수 s로 받아
# 정수부분이 0이 아닌 한자리인 지수 형태인 문자열로 반환한다.
# 주석처럼 결과가 나오도록 '''''' 위치에 작성하시오..
# 참고로 문자열을 실수로 변환한 처리하면, 소숫점 이하가 일치하지 않을 수 있다.
# 따라서 처음부터 끝까지 문자열로 처리해야 한다.
# 힌트: 문자열에서 소숫점이 있는 위치를 파악하여 지수를 결정해야한다.
#         "1234."은 소숫점을 3자리 옮겨야 되기때문에 지수가 3이된다.

def exp(s):
    ''''''

print(exp("12.3000") == "1.23000e1")    # True
print(exp("30.10") == "3.010e1")        # True
print(exp("1234.") == "1.234e3")        # True
print(exp("1.000") == "1.000e0")        # True


print("--- 5 ----")
# 음이 아닌 정수를 리스트로 나타낸다. 예: 1234는  [4, 3, 2, 1], 0은 [0]
# 리스트 형태의 수를 정수로 변환하여 반환하는 함수 f를 
# 주석처럼 결과가 나오도록 '''''' 위치에 완성하시오.
# 단, 함수 f 내에서는 대괄호 [ ]를 사용할 수 없다.

def f(li):
    ''''''

print(f([0]))		# 0
print(f([4,5]))		# 54
print(f([5, 4, 3, 2, 1]))	# 12345
print(f([3, 2, 1]) == 123)	# True


print("--- 6 ----")
# 함수 e(bi)는 0과 1의 리스트를 매개변수로 받아 압축 리스트를 반환한다.
# 압축 리스트는 첫 원소는 bi의 첫 원소와 같고, 그 이후는 연속된 0의 개수나
# 1의 개수로 구성된다.
# 주석처럼 결과가 나오도록 '''''' 위치에 함수를 작성하시오.
# 예: [0, 0, 0, 1, 1]은 [0, 3, 2]로 압축된다. [0, 3, 2]에서 0은 원래 리스트가 0으로 시작,
# 3은 연속된 0의 개수, 2는 연속된 1의 개수이다.

def e(bi):
    ''''''

print(e([0, 0, 0, 1, 1]))     # [0, 3, 2]
print(e([1, 1, 0, 0, 1, 0, 1, 1, 1, 0]))    # [1, 2, 2, 1, 1, 3, 1]
print(e([0, 0, 0, 0, 1, 1, 1, 0, 1,1,1]))   # [0, 4, 3, 1, 3]
